<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.oa.article.entity.ProArticle">
	<resultMap id="ProArticle" type="com.redxun.oa.article.entity.ProArticle">
		<id property="id" column="ID_" jdbcType="VARCHAR"/>
		<result property="belongProId" column="BELONG_PRO_ID_" jdbcType="VARCHAR"/>
		<result property="title" column="TITLE_" jdbcType="VARCHAR"/>
		<result property="author" column="AUTHOR_" jdbcType="VARCHAR"/>
		<result property="outLine" column="OUT_LINE_" jdbcType="VARCHAR"/>
		<result property="type" column="TYPE_" jdbcType="VARCHAR"/>
		<result property="parentId" column="PARENT_ID_" jdbcType="VARCHAR"/>
		<result property="sn" column="SN_" jdbcType="VARCHAR"/>
		<result property="content" column="CONTENT_" jdbcType="CLOB"/>
		<result property="tenantId" column="TENANT_ID_" jdbcType="VARCHAR"/>
		<result property="updateTime" column="UPDATE_TIME_" jdbcType="TIMESTAMP"/>
		<result property="updateBy" column="UPDATE_BY_" jdbcType="VARCHAR"/>
		<result property="createTime" column="CREATE_TIME_" jdbcType="TIMESTAMP"/>
		<result property="createBy" column="CREATE_BY_" jdbcType="VARCHAR"/>
	</resultMap>
	
	<insert id="create" parameterType="com.redxun.oa.article.entity.ProArticle">
		INSERT INTO PRO_ARTICLE
		(ID_,BELONG_PRO_ID_,TITLE_,AUTHOR_,OUT_LINE_,TYPE_,PARENT_ID_,SN_,CONTENT_,TENANT_ID_,UPDATE_TIME_,UPDATE_BY_,CREATE_TIME_,CREATE_BY_)
		VALUES 
		(#{id,jdbcType=VARCHAR}, #{belongProId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{outLine,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{sn,jdbcType=VARCHAR}, #{content,jdbcType=CLOB}, #{tenantId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR})
	</insert>
	
	<select id="get"   parameterType="java.lang.String" resultMap="ProArticle">
		SELECT * FROM PRO_ARTICLE 
		WHERE 
		ID_=#{id}
	</select>
	
	<select id="getByIds" parameterType="java.util.Map" resultMap="ProArticle">
		select ID_,BELONG_PRO_ID_,TITLE_,AUTHOR_,OUT_LINE_,TYPE_,PARENT_ID_,SN_,CONTENT_,TENANT_ID_,UPDATE_TIME_,UPDATE_BY_,CREATE_TIME_,CREATE_BY_
		from PRO_ARTICLE
		where ID_ in <foreach collection="ids"  item="id" separator="," open="(" close=")">#{id}</foreach>
	</select>
	
	<select id="query" parameterType="java.util.Map" resultMap="ProArticle">
		SELECT * FROM PRO_ARTICLE
		<where>
			<if test="@Ognl@isNotEmpty(whereSql)">
				${whereSql}
			</if>
		</where>
		<if test="@Ognl@isNotEmpty(orderBySql)">
			ORDER BY ${orderBySql}
		</if>
		<if test="@Ognl@isEmpty(orderBySql)">
			ORDER BY ID_ DESC
		</if>
	</select>
	
	<update id="update" parameterType="com.redxun.oa.article.entity.ProArticle">
		UPDATE PRO_ARTICLE SET
		BELONG_PRO_ID_=#{belongProId,jdbcType=VARCHAR},
		TITLE_=#{title,jdbcType=VARCHAR},
		AUTHOR_=#{author,jdbcType=VARCHAR},
		OUT_LINE_=#{outLine,jdbcType=VARCHAR},
		TYPE_=#{type,jdbcType=VARCHAR},
		PARENT_ID_=#{parentId,jdbcType=VARCHAR},
		SN_=#{sn,jdbcType=VARCHAR},
		CONTENT_=#{content,jdbcType=CLOB},
		TENANT_ID_=#{tenantId,jdbcType=VARCHAR},
		UPDATE_TIME_=#{updateTime,jdbcType=TIMESTAMP},
		UPDATE_BY_=#{updateBy,jdbcType=VARCHAR},
		CREATE_TIME_=#{createTime,jdbcType=TIMESTAMP},
		CREATE_BY_=#{createBy,jdbcType=VARCHAR}
		WHERE
		ID_=#{id}
	</update>
	
	<delete id="remove" parameterType="java.lang.String">
		DELETE FROM PRO_ARTICLE 
		WHERE
		ID_=#{id}
	</delete>
	
	<select id="getByItemId"   parameterType="java.lang.String" resultMap="ProArticle">
		SELECT * FROM PRO_ARTICLE 
		WHERE 
		BELONG_PRO_ID_=#{belongProId} order by SN_
	</select>
	
	
	
	
</mapper>