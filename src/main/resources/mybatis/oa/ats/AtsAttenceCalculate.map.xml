<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redxun.oa.ats.entity.AtsAttenceCalculate">
	<resultMap id="AtsAttenceCalculate" type="com.redxun.oa.ats.entity.AtsAttenceCalculate">
		<id property="id" column="ID" jdbcType="VARCHAR"/>
		<result property="fileId" column="FILE_ID" jdbcType="VARCHAR"/>
		<result property="attenceTime" column="ATTENCE_TIME" jdbcType="TIMESTAMP"/>
		<result property="isScheduleShift" column="IS_SCHEDULE_SHIFT" jdbcType="NUMERIC"/>
		<result property="dateType" column="DATE_TYPE" jdbcType="NUMERIC"/>
		<result property="holidayName" column="HOLIDAY_NAME" jdbcType="VARCHAR"/>
		<result property="isCardRecord" column="IS_CARD_RECORD" jdbcType="NUMERIC"/>
		<result property="shiftTime" column="SHIFT_TIME" jdbcType="VARCHAR"/>
		<result property="shouldAttenceHours" column="SHOULD_ATTENCE_HOURS" jdbcType="NUMERIC"/>
		<result property="actualAttenceHours" column="ACTUAL_ATTENCE_HOURS" jdbcType="NUMERIC"/>
		<result property="cardRecord" column="CARD_RECORD" jdbcType="VARCHAR"/>
		<result property="absentNumber" column="ABSENT_NUMBER" jdbcType="NUMERIC"/>
		<result property="absentTime" column="ABSENT_TIME" jdbcType="NUMERIC"/>
		<result property="absentRecord" column="ABSENT_RECORD" jdbcType="VARCHAR"/>
		<result property="lateNumber" column="LATE_NUMBER" jdbcType="NUMERIC"/>
		<result property="lateTime" column="LATE_TIME" jdbcType="NUMERIC"/>
		<result property="lateRecord" column="LATE_RECORD" jdbcType="VARCHAR"/>
		<result property="leaveNumber" column="LEAVE_NUMBER" jdbcType="NUMERIC"/>
		<result property="leaveTime" column="LEAVE_TIME" jdbcType="NUMERIC"/>
		<result property="leaveRecord" column="LEAVE_RECORD" jdbcType="VARCHAR"/>
		<result property="otNumber" column="OT_NUMBER" jdbcType="NUMERIC"/>
		<result property="otTime" column="OT_TIME" jdbcType="NUMERIC"/>
		<result property="otRecord" column="OT_RECORD" jdbcType="VARCHAR"/>
		<result property="holidayNumber" column="HOLIDAY_NUMBER" jdbcType="NUMERIC"/>
		<result property="holidayTime" column="HOLIDAY_TIME" jdbcType="NUMERIC"/>
		<result property="holidayUnit" column="HOLIDAY_UNIT" jdbcType="NUMERIC"/>
		<result property="holidayRecord" column="HOLIDAY_RECORD" jdbcType="VARCHAR"/>
		<result property="tripNumber" column="TRIP_NUMBER" jdbcType="NUMERIC"/>
		<result property="tripTime" column="TRIP_TIME" jdbcType="NUMERIC"/>
		<result property="tripRecord" column="TRIP_RECORD" jdbcType="VARCHAR"/>
		<result property="validCardRecord" column="VALID_CARD_RECORD" jdbcType="VARCHAR"/>
		<result property="attenceType" column="ATTENCE_TYPE" jdbcType="VARCHAR"/>
		<result property="shiftId" column="SHIFT_ID" jdbcType="VARCHAR"/>
		<result property="abnormity" column="ABNORMITY" jdbcType="NUMERIC"/>
		<result property="tenantId" column="TENANT_ID_" jdbcType="VARCHAR"/>
		<result property="createBy" column="CREATE_BY_" jdbcType="VARCHAR"/>
		<result property="createTime" column="CREATE_TIME_" jdbcType="TIMESTAMP"/>
		<result property="updateBy" column="UPDATE_BY_" jdbcType="VARCHAR"/>
		<result property="updateTime" column="UPDATE_TIME_" jdbcType="TIMESTAMP"/>
		
		
	</resultMap>
	
	<sql id="columns">
		ID,FILE_ID,ATTENCE_TIME,IS_SCHEDULE_SHIFT,DATE_TYPE,HOLIDAY_NAME,IS_CARD_RECORD,SHIFT_TIME,SHOULD_ATTENCE_HOURS,ACTUAL_ATTENCE_HOURS,CARD_RECORD,VALID_CARD_RECORD,ATTENCE_TYPE,SHIFT_ID,ABSENT_NUMBER,ABSENT_TIME,ABSENT_RECORD,LATE_NUMBER,LATE_TIME,LATE_RECORD,LEAVE_NUMBER,LEAVE_TIME,LEAVE_RECORD,OT_NUMBER,OT_TIME,OT_RECORD,HOLIDAY_NUMBER,HOLIDAY_TIME,HOLIDAY_UNIT,HOLIDAY_RECORD,TRIP_NUMBER,TRIP_TIME,TRIP_RECORD,ABNORMITY
	</sql>
	
	<insert id="create" parameterType="com.redxun.oa.ats.entity.AtsAttenceCalculate">
		INSERT INTO ats_attence_calculate
		(ID,FILE_ID,ATTENCE_TIME,IS_SCHEDULE_SHIFT,DATE_TYPE,HOLIDAY_NAME,IS_CARD_RECORD,SHIFT_TIME,SHOULD_ATTENCE_HOURS,ACTUAL_ATTENCE_HOURS,CARD_RECORD,ABSENT_NUMBER,ABSENT_TIME,ABSENT_RECORD,LATE_NUMBER,LATE_TIME,LATE_RECORD,LEAVE_NUMBER,LEAVE_TIME,LEAVE_RECORD,OT_NUMBER,OT_TIME,OT_RECORD,HOLIDAY_NUMBER,HOLIDAY_TIME,HOLIDAY_UNIT,HOLIDAY_RECORD,TRIP_NUMBER,TRIP_TIME,TRIP_RECORD,VALID_CARD_RECORD,ATTENCE_TYPE,SHIFT_ID,ABNORMITY,TENANT_ID_,CREATE_BY_,CREATE_TIME_,UPDATE_BY_,UPDATE_TIME_)
		VALUES 
		(#{id,jdbcType=VARCHAR}, #{fileId,jdbcType=VARCHAR}, #{attenceTime,jdbcType=TIMESTAMP}, #{isScheduleShift,jdbcType=NUMERIC}, #{dateType,jdbcType=NUMERIC}, #{holidayName,jdbcType=VARCHAR}, #{isCardRecord,jdbcType=NUMERIC}, #{shiftTime,jdbcType=VARCHAR}, #{shouldAttenceHours,jdbcType=NUMERIC}, #{actualAttenceHours,jdbcType=NUMERIC}, #{cardRecord,jdbcType=VARCHAR}, #{absentNumber,jdbcType=NUMERIC}, #{absentTime,jdbcType=NUMERIC}, #{absentRecord,jdbcType=VARCHAR}, #{lateNumber,jdbcType=NUMERIC}, #{lateTime,jdbcType=NUMERIC}, #{lateRecord,jdbcType=VARCHAR}, #{leaveNumber,jdbcType=NUMERIC}, #{leaveTime,jdbcType=NUMERIC}, #{leaveRecord,jdbcType=VARCHAR}, #{otNumber,jdbcType=NUMERIC}, #{otTime,jdbcType=NUMERIC}, #{otRecord,jdbcType=VARCHAR}, #{holidayNumber,jdbcType=NUMERIC}, #{holidayTime,jdbcType=NUMERIC}, #{holidayUnit,jdbcType=NUMERIC}, #{holidayRecord,jdbcType=VARCHAR}, #{tripNumber,jdbcType=NUMERIC}, #{tripTime,jdbcType=NUMERIC}, #{tripRecord,jdbcType=VARCHAR}, #{validCardRecord,jdbcType=VARCHAR}, #{attenceType,jdbcType=VARCHAR}, #{shiftId,jdbcType=VARCHAR}, #{abnormity,jdbcType=NUMERIC}, #{tenantId,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
	</insert>
	
	<select id="get"   parameterType="java.lang.String" resultMap="AtsAttenceCalculate">
		SELECT * FROM ats_attence_calculate 
		WHERE 
		ID=#{id}
	</select>
	
	<select id="query" parameterType="java.util.Map" resultMap="AtsAttenceCalculate">
		SELECT * FROM ats_attence_calculate
		<where>
			<if test="@Ognl@isNotEmpty(whereSql)">
				${whereSql}
			</if>
		</where>
		<if test="@Ognl@isNotEmpty(orderBySql)">
			ORDER BY ${orderBySql}
		</if>
		<if test="@Ognl@isEmpty(orderBySql)">
			ORDER BY ID DESC
		</if>
	</select>
	
	<update id="update" parameterType="com.redxun.oa.ats.entity.AtsAttenceCalculate">
		UPDATE ats_attence_calculate SET
		FILE_ID=#{fileId,jdbcType=VARCHAR},
		ATTENCE_TIME=#{attenceTime,jdbcType=TIMESTAMP},
		IS_SCHEDULE_SHIFT=#{isScheduleShift,jdbcType=NUMERIC},
		DATE_TYPE=#{dateType,jdbcType=NUMERIC},
		HOLIDAY_NAME=#{holidayName,jdbcType=VARCHAR},
		IS_CARD_RECORD=#{isCardRecord,jdbcType=NUMERIC},
		SHIFT_TIME=#{shiftTime,jdbcType=VARCHAR},
		SHOULD_ATTENCE_HOURS=#{shouldAttenceHours,jdbcType=NUMERIC},
		ACTUAL_ATTENCE_HOURS=#{actualAttenceHours,jdbcType=NUMERIC},
		CARD_RECORD=#{cardRecord,jdbcType=VARCHAR},
		ABSENT_NUMBER=#{absentNumber,jdbcType=NUMERIC},
		ABSENT_TIME=#{absentTime,jdbcType=NUMERIC},
		ABSENT_RECORD=#{absentRecord,jdbcType=VARCHAR},
		LATE_NUMBER=#{lateNumber,jdbcType=NUMERIC},
		LATE_TIME=#{lateTime,jdbcType=NUMERIC},
		LATE_RECORD=#{lateRecord,jdbcType=VARCHAR},
		LEAVE_NUMBER=#{leaveNumber,jdbcType=NUMERIC},
		LEAVE_TIME=#{leaveTime,jdbcType=NUMERIC},
		LEAVE_RECORD=#{leaveRecord,jdbcType=VARCHAR},
		OT_NUMBER=#{otNumber,jdbcType=NUMERIC},
		OT_TIME=#{otTime,jdbcType=NUMERIC},
		OT_RECORD=#{otRecord,jdbcType=VARCHAR},
		HOLIDAY_NUMBER=#{holidayNumber,jdbcType=NUMERIC},
		HOLIDAY_TIME=#{holidayTime,jdbcType=NUMERIC},
		HOLIDAY_UNIT=#{holidayUnit,jdbcType=NUMERIC},
		HOLIDAY_RECORD=#{holidayRecord,jdbcType=VARCHAR},
		TRIP_NUMBER=#{tripNumber,jdbcType=NUMERIC},
		TRIP_TIME=#{tripTime,jdbcType=NUMERIC},
		TRIP_RECORD=#{tripRecord,jdbcType=VARCHAR},
		VALID_CARD_RECORD=#{validCardRecord,jdbcType=VARCHAR},
		ATTENCE_TYPE=#{attenceType,jdbcType=VARCHAR},
		SHIFT_ID=#{shiftId,jdbcType=VARCHAR},
		ABNORMITY=#{abnormity,jdbcType=NUMERIC},
		TENANT_ID_=#{tenantId,jdbcType=VARCHAR},
		CREATE_BY_=#{createBy,jdbcType=VARCHAR},
		CREATE_TIME_=#{createTime,jdbcType=TIMESTAMP},
		UPDATE_BY_=#{updateBy,jdbcType=VARCHAR},
		UPDATE_TIME_=#{updateTime,jdbcType=TIMESTAMP}
		WHERE
		ID=#{id}
	</update>
	
	<delete id="remove" parameterType="java.lang.String">
		DELETE FROM ats_attence_calculate 
		WHERE
		ID=#{id}
	</delete>
	
	<delete id="delByFileId" parameterType="java.lang.String">
		DELETE FROM ATS_ATTENCE_CALCULATE 
		WHERE
		FILE_ID=#{fileId}
	</delete>
	
	<select id="getOrgnamesByUserId" parameterType="java.lang.String" resultMap="AtsAttenceCalculate">
		select a.NAME_ as orgName from os_group a inner join os_rel_inst b
		on a.GROUP_ID_ = b.PARTY1_ left join os_user c
		on b.PARTY2_ = c.USER_ID_
		where a.DIM_ID_=1 and c.USER_ID_=#{userId}
	</select>
	
	<select id="getList" resultMap="AtsAttenceCalculate">
		SELECT DISTINCT af.ID fileId,u.USER_NO_ account,u.FULLNAME_ userName,o.GROUP_ID_ orgId,o.NAME_ orgName
		FROM ATS_ATTENCE_CALCULATE   a
				right JOIN ATS_ATTENDANCE_FILE af on a.FILE_ID=af.ID
				LEFT JOIN os_user u on   af.user_Id=u.USER_ID_
				LEFT JOIN os_rel_inst up  on  u.USER_ID_=up.PARTY2_ 
				LEFT JOIN os_group o on up.PARTY1_=o.GROUP_ID_
		<where>
		    1=1
			<if test="@Ognl@isNotEmpty(fileId)"> AND FILE_ID  =#{fileId} </if>
			<if test="@Ognl@isNotEmpty(beginattenceTime)"> AND a.ATTENCE_TIME  <![CDATA[>=#{beginattenceTime,jdbcType=TIMESTAMP} ]]></if>
			<if test="@Ognl@isNotEmpty(endattenceTime)"> AND a.ATTENCE_TIME <![CDATA[ <=#{endattenceTime,jdbcType=TIMESTAMP}]]> </if>
			<if test="@Ognl@isNotEmpty(attencePolicy)"> AND af.ATTENCE_POLICY  =#{attencePolicy} </if>
			<if test="@Ognl@isNotEmpty(orgId)"> AND o.GROUP_ID_  =#{orgId} </if>
			<if test="@Ognl@isNotEmpty(userId)"> AND u.USER_NO_ =#{userId} </if>
			<if test="@Ognl@isNotEmpty(path)"> AND o.path_  LIKE #{path} </if>
			<if test="@Ognl@isNotEmpty(fullname)"> AND u.fullname_  LIKE #{fullname} </if>
			<if test="@Ognl@isNotEmpty(account)"> AND u.USER_NO_ = #{account} </if>
			and o.DIM_ID_ = 1 and u.STATUS_ = 'IN_JOB'
		</where>
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by o.GROUP_ID_  desc
		</if>
	</select>
	
	<select id="getListData" resultMap="AtsAttenceCalculate">
		SELECT DISTINCT 
			a.ID id,a.FILE_ID fileId,a.ATTENCE_TIME attenceTime,a.IS_SCHEDULE_SHIFT isScheduleShift,a.DATE_TYPE dateType,a.HOLIDAY_NAME holidayName,a.IS_CARD_RECORD isCardRecord,a.SHIFT_TIME shiftTime,
			a.SHOULD_ATTENCE_HOURS shouldAttenceHours,a.ACTUAL_ATTENCE_HOURS actualAttenceHours,a.CARD_RECORD cardRecord,a.ABSENT_NUMBER absentNumber,a.ABSENT_TIME absentTime,a.ABSENT_RECORD absentRecord,
			a.LATE_NUMBER lateNumber,a.LATE_TIME lateTime,a.LATE_RECORD lateRecord,a.LEAVE_NUMBER leaveNumber,a.LEAVE_TIME leaveTime,a.LEAVE_RECORD leaveRecord,a.OT_NUMBER otNumber,a.OT_TIME otTime,a.OT_RECORD otRecord,
			a.HOLIDAY_NUMBER holidayNumber,a.HOLIDAY_TIME holidayTime,a.HOLIDAY_UNIT holidayUnit,a.HOLIDAY_RECORD holidayRecord, a.TRIP_NUMBER tripNumber,a.TRIP_TIME tripTime,a.TRIP_RECORD tripRecord,
			a.SHIFT_ID shiftId,si.NAME shiftName, a.ATTENCE_TYPE attenceType,a.ABNORMITY abnormity,
			u.USER_ID_ userId,u.USER_NO_ account,u.FULLNAME_ userName
		FROM ATS_ATTENCE_CALCULATE   a
				LEFT JOIN ATS_ATTENDANCE_FILE af on a.file_id=af.id
				LEFT JOIN os_user u on   af.user_Id=u.USER_ID_
				LEFT JOIN os_rel_inst up  on  u.USER_ID_ = up.PARTY2_ 
				LEFT JOIN os_group o on up.PARTY1_=o.GROUP_ID_
				LEFT JOIN ATS_SHIFT_INFO si on a.SHIFT_ID=si.ID
		<where>
		    1=1
			<if test="@Ognl@isNotEmpty(fileId)"> AND FILE_ID  =#{fileId} </if>
			<if test="@Ognl@isNotEmpty(beginattenceTime)"> AND a.ATTENCE_TIME  <![CDATA[>=#{beginattenceTime,jdbcType=TIMESTAMP}]]> </if>
			<if test="@Ognl@isNotEmpty(endattenceTime)"> AND a.ATTENCE_TIME <![CDATA[ <=#{endattenceTime,jdbcType=TIMESTAMP}]]> </if>
			<if test="@Ognl@isNotEmpty(attencePolicy)"> AND af.ATTENCE_POLICY  =#{attencePolicy} </if>
			<if test="@Ognl@isNotEmpty(orgId)"> AND o.GROUP_ID_  =#{orgId} </if>
			<if test="@Ognl@isNotEmpty(userId)"> AND u.USER_NO_ =#{userId} </if>
			<if test="@Ognl@isNotEmpty(path)"> AND o.PATH_  LIKE #{path} </if>
			<if test="@Ognl@isNotEmpty(fullname)"> AND u.fullname_  LIKE #{fullname} </if>
			<if test="@Ognl@isNotEmpty(account)"> AND u.USER_NO_ = #{account} </if>
			<if test="@Ognl@isNotEmpty(abnormity)"> AND a.abnormity = #{abnormity} </if>
			<if test="@Ognl@isNotEmpty(attenceType)"> 
				AND <foreach collection="attenceType"  item="type" separator=" or " open="(" close=")">
							 a.ATTENCE_TYPE  LIKE #{type}
					</foreach>
			 </if>
			and u.STATUS_ = 'IN_JOB'
		</where>
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by a.FILE_ID, a.ATTENCE_TIME 
		</if>
	</select>
	
	<select id="getByFileIdTime" parameterType="java.util.Map" resultMap="AtsAttenceCalculate">
		SELECT <include refid="columns"/>
		FROM ATS_ATTENCE_CALCULATE
		WHERE FILE_ID  =#{fileId} 
		<if test="@Ognl@isNotEmpty(beginattenceTime)"> AND ATTENCE_TIME <![CDATA[ >=#{beginattenceTime,jdbcType=TIMESTAMP}]]> </if>
		<if test="@Ognl@isNotEmpty(endattenceTime)"> AND ATTENCE_TIME <![CDATA[ <=#{endattenceTime,jdbcType=TIMESTAMP}]]> </if>
		order by ATTENCE_TIME ASC
	</select>
	
	<select id="getByFileIdAttenceTime" parameterType="java.util.Map" resultMap="AtsAttenceCalculate">
		SELECT <include refid="columns"/>
		FROM ATS_ATTENCE_CALCULATE
		WHERE
		FILE_ID  =#{fileId} AND ATTENCE_TIME  =#{attenceTime,jdbcType=TIMESTAMP}
	</select>
	
</mapper>